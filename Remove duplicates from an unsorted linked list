GFG practise link :- https://practice.geeksforgeeks.org/problems/remove-duplicates-from-an-unsorted-linked-list/1

/*
Given an unsorted linked list of N nodes. The task is to remove duplicate elements from this unsorted Linked List. When a value appears in multiple nodes, the node which appeared first should be kept, all others duplicates are to be removed.

Example 1:

Input:
N = 4
value[] = {5,2,2,4}
Output: 5 2 4
Explanation:Given linked list elements are
5->2->2->4, in which 2 is repeated only.
So, we will delete the extra repeated
elements 2 from the linked list and the
resultant linked list will contain 5->2->4
*/

class Solution
{
    //Function to remove duplicates from unsorted linked list.
    public Node removeDuplicates(Node head) 
    {
         // Your code here
         Node curr=head;
         Node prev=null;
         Map<Integer,Integer> m = new HashMap<>();
         m.put(curr.data,1);
         prev=curr;
         curr=curr.next;
         while(curr!=null){
             if(m.containsKey(curr.data)){
                 prev.next=curr.next;
                //  curr=null;
             }
             else{
                 m.put(curr.data,1);
                 prev=curr;
             }
             curr=prev.next;
         }
         return head;
    }
}
